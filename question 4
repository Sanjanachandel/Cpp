#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

// Function to reverse the array
void reverseArray(vector<int>& arr) {
    reverse(arr.begin(), arr.end());
}

// Function to check if the array is sorted in ascending order
bool isSorted(const vector<int>& arr) {
    for (size_t i = 1; i < arr.size(); i++) {
        if (arr[i] < arr[i - 1]) {
            return false;
        }
    }
    return true;
}

// Function to find the maximum and minimum elements in the array
pair<int, int> findMinMax(const vector<int>& arr) {
    int minElement = *min_element(arr.begin(), arr.end());
    int maxElement = *max_element(arr.begin(), arr.end());
    return {minElement, maxElement};
}

// Function to display the array
void displayArray(const vector<int>& arr) {
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;
}

int main() {
    vector<int> arr(10);
    cout << "Enter 10 integer values: ";
    for (int& num : arr) {
        cin >> num;
    }

    int choice;
    do {
        cout << "\nMenu:\n";
        cout << "1. Reverse Array\n";
        cout << "2. Check if Sorted\n";
        cout << "3. Find Maximum and Minimum\n";
        cout << "4. Display Original Array\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                reverseArray(arr);
                cout << "Reversed Array: ";
                displayArray(arr);
                break;
            case 2:
                cout << (isSorted(arr) ? "The array is sorted." : "The array is not sorted.") << endl;
                break;
            case 3: {
                auto [minElement, maxElement] = findMinMax(arr);
                cout << "Minimum: " << minElement << ", Maximum: " << maxElement << endl;
                break;
            }
            case 4:
                cout << "Original Array: ";
                displayArray(arr);
                break;
            case 5:
                cout << "Exiting program..." << endl;
                break;
            default:
                cout << "Invalid choice! Please try again." << endl;
        }
    } while (choice != 5);

    return 0;
}
